********************************************************************************
Permafrost Engine Python API documentation
Module: pf
********************************************************************************

This file is generated by the script: ./scripts/dump_api.py.
Use this script as the engine argument to generate up-to-date API documentation.

********************************************************************************
BUILT-IN FUNCTIONS
********************************************************************************

    [add_faction]
    ----------------------------------------------------------------------------
    Add a new faction with the specified name and color. By default, this
    faction is mutually at peace with every other existing faction. By default,
    new factions are player-controllable.

    [clear_unit_selection]
    ----------------------------------------------------------------------------
    Clear the current unit seleciton.

    [disable_fog_of_war]
    ----------------------------------------------------------------------------
    Disable the fog of war.

    [disable_unit_selection]
    ----------------------------------------------------------------------------
    Make it impossible to select units with the mouse. Disable drawing of a
    selection box when dragging the mouse.

    [draw_text]
    ----------------------------------------------------------------------------
    Draw a text label with the specified bounds (X, Y, W, H) )and with the
    specified color (R, G, B, A). The label lasts for one frame, meaning this
    should be called every tick to keep the label fixed.

    [enable_fog_of_war]
    ----------------------------------------------------------------------------
    Enable the fog of war.

    [enable_unit_selection]
    ----------------------------------------------------------------------------
    Make it possible to select units with the mouse. Enable drawing of a
    selection box when dragging the mouse.

    [exec_]
    ----------------------------------------------------------------------------
    Replace the current subsession with one set up by the provided script. This
    is performed asynchronously. Failure is notified via an
    EVENT_SESSION_FAIL_LOAD event.

    [exec_pop]
    ----------------------------------------------------------------------------
    Pop a previously saved subsession, using it to replace the current
    subsession. This is performed asynchronously. Failure is notified via an
    EVENT_SESSION_FAIL_LOAD event.

    [exec_pop_to_root]
    ----------------------------------------------------------------------------
    Pop the root subsession, using it to replace the current subsession. This
    is performed asynchronously. Failure is notified via an
    EVENT_SESSION_FAIL_LOAD event.

    [exec_push]
    ----------------------------------------------------------------------------
    Replace the current subsession with one set up by the provided script,
    saving the current subsession onto a stack. This is performed
    asynchronously. Failure is notified via an EVENT_SESSION_FAIL_LOAD event.

    [get_active_camera]
    ----------------------------------------------------------------------------
    Get a pf.Camera object describing the active camera from whose point of
    view the scene is currently rendered.

    [get_active_font]
    ----------------------------------------------------------------------------
    Get the name of the current active font.

    [get_basedir]
    ----------------------------------------------------------------------------
    Get the path to the top-level game resource folder (parent of 'assets').

    [get_factions_list]
    ----------------------------------------------------------------------------
    Returns a list of descriptors (dictionaries) for each faction in the game.

    [get_file_size]
    ----------------------------------------------------------------------------
    Get the size (in bytes) of a Python file object.

    [get_hovered_unit]
    ----------------------------------------------------------------------------
    Get the closest unit under the mouse cursor, or None.

    [get_minimap_position]
    ----------------------------------------------------------------------------
    Returns the current minimap position in virtual screen coordinates.

    [get_minimap_size]
    ----------------------------------------------------------------------------
    Get the center position of the minimap in virtual screen coordinates.

    [get_mouse_pos]
    ----------------------------------------------------------------------------
    Get the (x, y) cursor position on the screen.

    [get_native_resolution]
    ----------------------------------------------------------------------------
    Returns the native resolution of the active monitor.

    [get_nav_perfstats]
    ----------------------------------------------------------------------------
    Returns a dictionary holding various performance couners for the navigation
    subsystem.

    [get_render_info]
    ----------------------------------------------------------------------------
    Returns a dictionary describing the renderer context. It will have the
    string keys 'renderer', 'version', 'shading_language_version', and 'vendor'.

    [get_resolution]
    ----------------------------------------------------------------------------
    Get the currently set resolution of the game window.

    [get_simstate]
    ----------------------------------------------------------------------------
    Returns the current simulation state.

    [get_tile]
    ----------------------------------------------------------------------------
    Get the pf.Tile object describing the tile at the specified coordinates.

    [get_unit_selection]
    ----------------------------------------------------------------------------
    Returns a list of objects currently selected by the player.

    [global_event]
    ----------------------------------------------------------------------------
    Broadcast a global event so all handlers can get invoked. Any weakref
    argument is automatically unpacked before being sent to the handler.

    [hide_healthbars]
    ----------------------------------------------------------------------------
    Disable rendering of healthbars. Overrides the user-configurable dynamic
    setting.

    [load_map]
    ----------------------------------------------------------------------------
    Loads the map from the specified file.

    [load_map_string]
    ----------------------------------------------------------------------------
    Loads the map from the specified PFMAP string.

    [load_scene]
    ----------------------------------------------------------------------------
    Import list of entities from a PFSCENE file (specified as a path string).
    Returns a list of the loaded entities.

    [load_session]
    ----------------------------------------------------------------------------
    Load a session previously saved with the 'save_session' call.

    [map_height_at_point]
    ----------------------------------------------------------------------------
    Returns the Y-dimension map height at the specified XZ coordinate. Returns
    None if the specified coordinate is outside the map bounds.

    [map_pos_under_cursor]
    ----------------------------------------------------------------------------
    Returns the XYZ coordinate of the point of the map underneath the cursor.
    Returns 'None' if the cursor is not over the map.

    [mouse_over_minimap]
    ----------------------------------------------------------------------------
    Returns true if the mouse cursor is over the minimap, false otherwise.

    [mouse_over_ui]
    ----------------------------------------------------------------------------
    Returns True if the mouse cursor is within the bounds of any UI windows.

    [multiply_quaternions]
    ----------------------------------------------------------------------------
    Returns the normalized result of multiplying 2 quaternions (specified as a
    list of 4 floats - XYZW order).

    [pickle_object]
    ----------------------------------------------------------------------------
    Returns an ASCII string holding the serialized representation of the object
    graph.

    [prev_frame_ms]
    ----------------------------------------------------------------------------
    Get the duration of the previous game frame in milliseconds.

    [prev_frame_perfstats]
    ----------------------------------------------------------------------------
    Get a dictionary of the performance data for the previous frame.

    [rand]
    ----------------------------------------------------------------------------
    Return a pseudo-random number in the range of 0 to the integer argument.

    [register_event_handler]
    ----------------------------------------------------------------------------
    Adds a script event handler to be called when the specified global event
    occurs. Any weakref user arguments are automatically unpacked before being
    passed to the handler.

    [register_ui_event_handler]
    ----------------------------------------------------------------------------
    Same as 'register_event_handler' but the handler will also be run when the
    simulation state is pf.G_PAUSED_UI_RUNNING. This is for UI callbacks that
    should still be invoked even when the game is in a 'paused' state.

    [remove_faction]
    ----------------------------------------------------------------------------
    Remove the faction with the specified faction_id. This will remove all
    entities belonging to that faction. This may change the values of some
    other entities' faction_ids.

    [save_session]
    ----------------------------------------------------------------------------
    Save the current state of the engine to the specified file. The session can
    then be loaded from the file with the 'load_session' call.

    [set_active_camera]
    ----------------------------------------------------------------------------
    Set a pf.Camera object to be the active camera from whose point of view the
    scene is currently rendered.

    [set_active_font]
    ----------------------------------------------------------------------------
    Set the current active font to that of the specified name.

    [set_ambient_light_color]
    ----------------------------------------------------------------------------
    Sets the global ambient light color (specified as an RGB multiplier) for
    the scene.

    [set_attack_on_left_click]
    ----------------------------------------------------------------------------
    Set the cursor to target mode. The next left click will issue an attack
    command to the location under the cursor.

    [set_build_on_left_click]
    ----------------------------------------------------------------------------
    Set the cursor to target mode. The next left click will issue a build
    command to the building under the cursor.

    [set_diplomacy_state]
    ----------------------------------------------------------------------------
    Symmetrically sets the diplomacy state between two distinct factions
    (passed in as IDs).

    [set_emit_light_color]
    ----------------------------------------------------------------------------
    Sets the color (specified as an RGB multiplier) for the global light source.

    [set_emit_light_pos]
    ----------------------------------------------------------------------------
    Sets the position (in XYZ worldspace coordinates)

    [set_faction_controllable]
    ----------------------------------------------------------------------------
    Sets whether units of this faction can be controlled by the player or not.

    [set_map_highlight_size]
    ----------------------------------------------------------------------------
    Determines how many tiles around the currently hovered tile are
    highlighted. (0 = none, 1 = single tile highlighted, 2 = 3x3 grid
    highlighted, etc.)

    [set_minimap_position]
    ----------------------------------------------------------------------------
    Set the center position of the minimap in virtual screen coordinates.

    [set_minimap_resize_mask]
    ----------------------------------------------------------------------------
    Set the anchor points for the minimap, to control its bounds as the screen
    resizes.

    [set_minimap_size]
    ----------------------------------------------------------------------------
    Set the center position of the minimap in virtual screen coordinates. A
    size of 0 fully hides the minimap.

    [set_move_on_left_click]
    ----------------------------------------------------------------------------
    Set the cursor to target mode. The next left click will issue a move
    command to the location under the cursor.

    [set_simstate]
    ----------------------------------------------------------------------------
    Set the current simulation state.

    [settings_create]
    ----------------------------------------------------------------------------
    Create a new setting, the value of which will be saved in the settings file
    and will be accessible in another session. Settings may hold the following
    types: int, float, string, bool, and tuple of 2 floats (vec2). Setting
    names beginning with 'pf' are reserved for the engine.

    [settings_delete]
    ----------------------------------------------------------------------------
    Delete a setting with the specified name. Setting names beginning with 'pf'
    are reserved for the engine and may not be deleted.

    [settings_get]
    ----------------------------------------------------------------------------
    Returns the value of the setting with the specified name. Will throw an
    exception if the setting is not found.

    [settings_set]
    ----------------------------------------------------------------------------
    Updates the value of the setting with the specified name. Will throw an
    exception if the setting is not found or if the new value for the setting
    is invalid.

    [show_healthbars]
    ----------------------------------------------------------------------------
    Re-enable showing the healthbars after a 'hide_healthbars' call. Note that
    the healthbars will only be rendered if the corresponding user-configurable
    setting is set.

    [ui_text_edit_has_focus]
    ----------------------------------------------------------------------------
    Returns True if the mouse cursor is currently in an editable text field of
    a UI window, such that the field records the keystrokes.

    [unpickle_object]
    ----------------------------------------------------------------------------
    Returns a new reference to an object built from its' serialized
    representation. The argument string must an earlier return value of
    'pf.pickle_object'.

    [unregister_event_handler]
    ----------------------------------------------------------------------------
    Removes a script event handler added by 'register_event_handler'.

    [update_faction]
    ----------------------------------------------------------------------------
    Updates the name and color of the faction with the specified faction_id.

    [update_tile]
    ----------------------------------------------------------------------------
    Update the map tile at the specified coordinates to the new value.

********************************************************************************
BUILT-IN CLASSES
********************************************************************************

    [AnimEntity]
    ----------------------------------------------------------------------------
    Permafrost Engine animated entity. This type requires the 'idle_clip'
    keyword argument to be passed to __init__. This is a subclass of pf.Entity.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [faction_id]
        Index of the faction that the entity belongs to.

        [name]
        Custom name given to this enity.

        [pfobj_path]
        The relative path of the PFOBJ file used to instantiate the entity.
        Readonly.

        [pos]
        The XYZ position in worldspace coordinates.

        [rotation]
        XYZW quaternion for rotaion about local origin.

        [scale]
        The XYZ scaling factors.

        [selectable]
        Flag indicating whether this entity can be selected with the mouse.

        [selection_radius]
        Radius (in OpenGL coordinates) of the unit selection circle for this
        entity.

        [speed]
        Entity's movement speed (in OpenGL coordinates per second).

        [vision_range]
        The radius (in OpenGL coordinates) that the entity sees around itself.

        ************************************************************************
        METHODS
        ************************************************************************
        [__del__]
        Calls the next __del__ in the MRO if there is one, otherwise do nothing.

        [__pickle__]
        Serialize a Permafrost Engine animated entity to a string.

        [deselect]
        Removes the entity from the current unit selection, if it is selected.

        [face_towards]
        Make the entity face towards the specified point.

        [get_anim]
        Get the name of the currently playing animation clip.

        [move]
        Issues a 'move' order to the entity at the XZ position specified by the
        argument.

        [notify]
        Send a specific event to an entity in order to invoke the entity's
        event handlers. Weakref arguments are automatically unpacked before
        being passed to the handler.

        [play_anim]
        Play the animation clip with the specified name. Set kwarg 'mode=%d' to
        set the animation mode. The default is ANIM_MODE_LOOP.

        [register]
        Registers the specified callable to be invoked when an event of the
        specified type is sent to this entity.

        [select]
        Adds the entity to the current unit selection, if it is not present
        there already.

        [set_model]
        Replace the current entity's current model and animation data with the
        specified PFOBJ data.

        [stop]
        Issues a 'stop' command to the entity, stopping its' movement and
        attack. Cancels 'hold position' order.

        [unregister]
        Unregisters a callable previously registered to be invoked on the
        specified event.

    [BuildableEntity]
    ----------------------------------------------------------------------------
    Permafrost Engine entity buildable entity. This is a subclass of pf.Entity.
    The building starts out in the 'PLACEMENT' state. It must then go through
    the 'MARKED', 'FOUNDED', and 'COMPLETED' states.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [faction_id]
        Index of the faction that the entity belongs to.

        [name]
        Custom name given to this enity.

        [pfobj_path]
        The relative path of the PFOBJ file used to instantiate the entity.
        Readonly.

        [pos]
        The XYZ position in worldspace coordinates.

        [rotation]
        XYZW quaternion for rotaion about local origin.

        [scale]
        The XYZ scaling factors.

        [selectable]
        Flag indicating whether this entity can be selected with the mouse.

        [selection_radius]
        Radius (in OpenGL coordinates) of the unit selection circle for this
        entity.

        [speed]
        Entity's movement speed (in OpenGL coordinates per second).

        [vision_range]
        The radius (in OpenGL coordinates) that the entity sees around itself.

        ************************************************************************
        METHODS
        ************************************************************************
        [__del__]
        Calls the next __del__ in the MRO if there is one, otherwise do nothing.

        [__pickle__]
        Serialize a Permafrost Engine buildable entity to a string.

        [complete]
        Advance a building to the 'COMPLETED' state from the 'FOUNDED' state.

        [deselect]
        Removes the entity from the current unit selection, if it is selected.

        [face_towards]
        Make the entity face towards the specified point.

        [found]
        Advance a building to the 'FOUNDED' state from the 'MARKED' state,
        where it becomes a build site and wait for workes to finish
        constructing it.

        [mark]
        Advance a building to the 'MARKED' state from the initial 'PLACEMENT'
        state, where it will wait for a worker to found it.

        [move]
        Issues a 'move' order to the entity at the XZ position specified by the
        argument.

        [notify]
        Send a specific event to an entity in order to invoke the entity's
        event handlers. Weakref arguments are automatically unpacked before
        being passed to the handler.

        [register]
        Registers the specified callable to be invoked when an event of the
        specified type is sent to this entity.

        [select]
        Adds the entity to the current unit selection, if it is not present
        there already.

        [set_model]
        Replace the current entity's current model and animation data with the
        specified PFOBJ data.

        [stop]
        Issues a 'stop' command to the entity, stopping its' movement and
        attack. Cancels 'hold position' order.

        [unobstructed]
        Returns True if there is no obstruction under any of the building's
        tiles.

        [unregister]
        Unregisters a callable previously registered to be invoked on the
        specified event.

    [BuilderEntity]
    ----------------------------------------------------------------------------
    Permafrost Engine builder entity. This is a subclass of pf.Entity. This
    kind of entity is able to construct and repair pf.BuildableEntity
    instances. This type requires the 'build_speed' keyword argument to be
    passed to '__init__'.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [faction_id]
        Index of the faction that the entity belongs to.

        [name]
        Custom name given to this enity.

        [pfobj_path]
        The relative path of the PFOBJ file used to instantiate the entity.
        Readonly.

        [pos]
        The XYZ position in worldspace coordinates.

        [rotation]
        XYZW quaternion for rotaion about local origin.

        [scale]
        The XYZ scaling factors.

        [selectable]
        Flag indicating whether this entity can be selected with the mouse.

        [selection_radius]
        Radius (in OpenGL coordinates) of the unit selection circle for this
        entity.

        [speed]
        Entity's movement speed (in OpenGL coordinates per second).

        [vision_range]
        The radius (in OpenGL coordinates) that the entity sees around itself.

        ************************************************************************
        METHODS
        ************************************************************************
        [__del__]
        Calls the next __del__ in the MRO if there is one, otherwise do nothing.

        [__pickle__]
        Serialize a Permafrost Engine builder entity to a string.

        [build]
        Issue an order to build a specific buildable entity.

        [deselect]
        Removes the entity from the current unit selection, if it is selected.

        [face_towards]
        Make the entity face towards the specified point.

        [move]
        Issues a 'move' order to the entity at the XZ position specified by the
        argument.

        [notify]
        Send a specific event to an entity in order to invoke the entity's
        event handlers. Weakref arguments are automatically unpacked before
        being passed to the handler.

        [register]
        Registers the specified callable to be invoked when an event of the
        specified type is sent to this entity.

        [select]
        Adds the entity to the current unit selection, if it is not present
        there already.

        [set_model]
        Replace the current entity's current model and animation data with the
        specified PFOBJ data.

        [stop]
        Issues a 'stop' command to the entity, stopping its' movement and
        attack. Cancels 'hold position' order.

        [unregister]
        Unregisters a callable previously registered to be invoked on the
        specified event.

    [Camera]
    ----------------------------------------------------------------------------
    Permafrost Engine camera object.                               
                                                                   
    The camera takes the following (optional) keyword  arguments   
    in its' constructor:                                           
                                                                   
      - mode {pf.CAM_MODE_RTS, pf.CAM_MODE_FPS, pf.CAM_MODE_FREE}  
      - position (tuple of 3 floats)                               
      - pitch (float)                                              
      - yaw (float)                                                
      - speed (float)                                              
      - sensitivity (float)                                        


        ************************************************************************
        MEMBERS
        ************************************************************************
        [direction]
        The current worldspace direction of the camera

        [mode]
        The mode determines which controller is installed when the camera is
        activated. Can be one of pf.CAM_MODE_RTS, pf.CAM_MODE_FPS,
        pf.CAM_MODE_FREE

        [pitch]
        The camera's pitch (in degrees)

        [position]
        The current worldspace position of the camera

        [sensitivity]
        The camera's sensitivity (how fast direction can be changed)

        [speed]
        The camera's speed (in OpenGL units / ms)

        [yaw]
        The camera's yaw (in degrees)

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine camera object to a string.

    [CombatableEntity]
    ----------------------------------------------------------------------------
    Permafrost Engine entity which is able to take part in combat. This type
    requires the 'max_hp', 'base_dmg', and 'base_armour' keyword arguments to
    be passed to __init__. This is a subclass of pf.Entity.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [base_armour]
        The base armour (as a fraction from 0.0 to 1.0) specifying which
        percentage of incoming damage is blocked.

        [base_dmg]
        The base damage for which this entity's attacks hit.

        [faction_id]
        Index of the faction that the entity belongs to.

        [max_hp]
        The maximum number of hitpoints that the entity starts out with.

        [name]
        Custom name given to this enity.

        [pfobj_path]
        The relative path of the PFOBJ file used to instantiate the entity.
        Readonly.

        [pos]
        The XYZ position in worldspace coordinates.

        [rotation]
        XYZW quaternion for rotaion about local origin.

        [scale]
        The XYZ scaling factors.

        [selectable]
        Flag indicating whether this entity can be selected with the mouse.

        [selection_radius]
        Radius (in OpenGL coordinates) of the unit selection circle for this
        entity.

        [speed]
        Entity's movement speed (in OpenGL coordinates per second).

        [vision_range]
        The radius (in OpenGL coordinates) that the entity sees around itself.

        ************************************************************************
        METHODS
        ************************************************************************
        [__del__]
        Calls the next __del__ in the MRO if there is one, otherwise do nothing.

        [__pickle__]
        Serialize a Permafrost Engine combatable entity to a string.

        [attack]
        Issues an 'attack move' order to the entity at the XZ position
        specified by the argument.

        [deselect]
        Removes the entity from the current unit selection, if it is selected.

        [face_towards]
        Make the entity face towards the specified point.

        [hold_position]
        Issues a 'hold position' order to the entity, stopping it and
        preventing it from moving to attack.

        [move]
        Issues a 'move' order to the entity at the XZ position specified by the
        argument.

        [notify]
        Send a specific event to an entity in order to invoke the entity's
        event handlers. Weakref arguments are automatically unpacked before
        being passed to the handler.

        [register]
        Registers the specified callable to be invoked when an event of the
        specified type is sent to this entity.

        [select]
        Adds the entity to the current unit selection, if it is not present
        there already.

        [set_model]
        Replace the current entity's current model and animation data with the
        specified PFOBJ data.

        [stop]
        Issues a 'stop' command to the entity, stopping its' movement and
        attack. Cancels 'hold position' order.

        [unregister]
        Unregisters a callable previously registered to be invoked on the
        specified event.

    [Entity]
    ----------------------------------------------------------------------------
    Permafrost Engine generic game entity.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [faction_id]
        Index of the faction that the entity belongs to.

        [name]
        Custom name given to this enity.

        [pfobj_path]
        The relative path of the PFOBJ file used to instantiate the entity.
        Readonly.

        [pos]
        The XYZ position in worldspace coordinates.

        [rotation]
        XYZW quaternion for rotaion about local origin.

        [scale]
        The XYZ scaling factors.

        [selectable]
        Flag indicating whether this entity can be selected with the mouse.

        [selection_radius]
        Radius (in OpenGL coordinates) of the unit selection circle for this
        entity.

        [speed]
        Entity's movement speed (in OpenGL coordinates per second).

        [vision_range]
        The radius (in OpenGL coordinates) that the entity sees around itself.

        ************************************************************************
        METHODS
        ************************************************************************
        [__del__]
        Calls the next __del__ in the MRO if there is one, otherwise do nothing.

        [__pickle__]
        Serialize a Permafrost Engine entity to a string.

        [deselect]
        Removes the entity from the current unit selection, if it is selected.

        [face_towards]
        Make the entity face towards the specified point.

        [move]
        Issues a 'move' order to the entity at the XZ position specified by the
        argument.

        [notify]
        Send a specific event to an entity in order to invoke the entity's
        event handlers. Weakref arguments are automatically unpacked before
        being passed to the handler.

        [register]
        Registers the specified callable to be invoked when an event of the
        specified type is sent to this entity.

        [select]
        Adds the entity to the current unit selection, if it is not present
        there already.

        [set_model]
        Replace the current entity's current model and animation data with the
        specified PFOBJ data.

        [stop]
        Issues a 'stop' command to the entity, stopping its' movement and
        attack. Cancels 'hold position' order.

        [unregister]
        Unregisters a callable previously registered to be invoked on the
        specified event.

    [Task]
    ----------------------------------------------------------------------------
    Permafrost Engine runnable task.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [completed]
        Returns True if the task has ran to completion

        ************************************************************************
        METHODS
        ************************************************************************
        [__call__]
        x.__call__(...) <==> x(...)

        [__pickle__]
        Serialize a Permafrost Engine task object to a string.

        [await_event]
        Become blocked unitl a particular event takes place.

        [receive]
        Become blocked, waiting until a message is received from the specified
        task.

        [register]
        Register this task for a specific name.

        [reply]
        Respond to a sent message from another task, unblocking it.

        [run]
        Start the task, invoking its' __run__ method in a fiber context.

        [send]
        Send a message to another pf.Task instance, becoming blocked until it
        replies.

        [sleep]
        Become blocked for a period of time specified in milliseconds.

        [wait]
        Block until the completion of another pf.Task instance.

        [who_is]
        Look up a task for a specific name

        [yield_]
        Yield to the scheduler, allowing other tasks to run. The task may be
        suspended until the next frame. Yielding periodically is a means to
        make sure that long-running tasks don't exceed the frame's time budget.

    [Tile]
    ----------------------------------------------------------------------------
    Map tile representation for Permafrost Engine maps.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [base_height]
        The height level of the bottom plane of the tile.

        [blend_mode]
        The mode which determines how this tile's texture is blended with
        adjacent tiles' textures.

        [blend_normals]
        A boolean which determines if this tile's normals are averaged together
        with adjacent normals to create a 'smooth' terrain look.

        [bot_left_height]
        The height of the bot left corner.

        [bot_right_height]
        The height of the bot right corner.

        [pathable]
        Whether or not units can travel through this tile.

        [ramp_height]
        The height of the top edge of the ramp or corner above the base_height.

        [sides_mat_idx]
        Material index for the side faces of the tile.

        [top_left_height]
        The height of the top left corner.

        [top_mat_idx]
        Material index for the top face of the tile.

        [top_right_height]
        The height of the top right corner.

        [type]
        Integer value specifying whether this tile is a ramp, which direction
        it faces, etc.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine tile to a string.

    [UIButtonStyle]
    ----------------------------------------------------------------------------
    Style configuration for Permafrost Engine UI buttons.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [active]
        The look of the button in the active (pressed) state - either an (R, G,
        B, A) tuple or a string representing a path to an image.

        [border]
        A floating-point value of the button border width, in pixels.

        [border_color]
        The (R, G, B, A) color of button borders.

        [hover]
        The look of the button when the mouse is hovered over it - either an
        (R, G, B, A) tuple or a string representing a path to an image.

        [image_padding]
        An (X, Y) tuple of floats to control the padding around images.

        [normal]
        The look of the button in the normal state - either an (R, G, B, A)
        tuple or a string representing a path to an image.

        [padding]
        An (X, Y) tuple of floats to control the padding around buttons.

        [rounding]
        A floating-point value to control how rounded the button corners are.

        [text_active]
        The (R, G, B, A) color of button text when the button is in the active
        state.

        [text_alignment]
        A set of flags to control the text alignment of the button label.

        [text_background]
        The (R, G, B, A) background color of the text when an image is used for
        the button.

        [text_hover]
        The (R, G, B, A) color of button text when the cursor is hovered over
        the button.

        [text_normal]
        The (R, G, B, A) color of button text when the button is in the default
        state.

        [touch_padding]
        An (X, Y) tuple of floats to control the clickable region of the button.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine UIButtonStyle object to a string.

    [UIComboStyle]
    ----------------------------------------------------------------------------
    Style configuration for Permafrost Engine combo box UI elements.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [active]
        The look of the combo element in the active state - either an (R, G, B,
        A) tuple or a string representing a path to an image.

        [border]
        A floating-point value to control width of the combo box border.

        [border_color]
        The color of the combo box border - an (R, G, B, A) tuple.

        [button]
        A pf.UIButtonStyle object describing the style of the combo box
        drop-down button.

        [button_padding]
        An (X, Y) tuple of floats to control the padding around combo box
        drop-down buttons.

        [content_padding]
        An (X, Y) tuple of floats to control the padding around combo box
        contents.

        [hover]
        The look of the combo element in the hovered state - either an (R, G,
        B, A) tuple or a string representing a path to an image.

        [label_active]
        The color of the combo item label in the active state - an (R, G, B, A)
        tuple

        [label_hover]
        The color of the combo item label in the hovered state - an (R, G, B,
        A) tuple

        [label_normal]
        The color of the combo item label in the normal state - an (R, G, B, A)
        tuple.

        [normal]
        The look of the combo element in the normal state - either an (R, G, B,
        A) tuple or a string representing a path to an image.

        [rounding]
        A floating-point value to control how rounded the selectable label
        corners are.

        [spacing]
        An (X, Y) tuple of floats to control the spacing in between combo box
        elements.

        [sym_active]
        The type of the combo box drop-down glyph in the active state - an
        integer (pf.NK_SYMBOL_X, etc.)

        [sym_hover]
        The type of the combo box drop-down glyph in the hovered state - an
        integer (pf.NK_SYMBOL_X, etc.)

        [sym_normal]
        The type of the combo box drop-down glyph in the normal state - an
        integer (pf.NK_SYMBOL_X, etc.)

        [symbol_active]
        The color of the combo symbol in the active state - an (R, G, B, A)
        tuple

        [symbol_hover]
        The color of the combo symbol in the hovered state - an (R, G, B, A)
        tuple

        [symbol_normal]
        The color of the combo symbol in the normal state - an (R, G, B, A)
        tuple.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine UIComboStyle object to a string.

    [UIHeaderStyle]
    ----------------------------------------------------------------------------
    Style configuration for Permafrost Engine UI window headers.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [active]
        The look of the button in the active (pressed) state - either an (R, G,
        B, A) tuple or a string representing a path to an image.

        [close_button]
        A pf.UIButtonStyle object describing the style of the close button.

        [hover]
        The look of the button when the mouse is hovered over it - either an
        (R, G, B, A) tuple or a string representing a path to an image.

        [label_active]
        The (R, G, B, A) color of header label when the window is in the active
        state.

        [label_hover]
        The (R, G, B, A) color of header label when the cursor is hovered over
        the window.

        [label_normal]
        The (R, G, B, A) color of header label when the window is in the
        default state.

        [minimize_button]
        A pf.UIButtonStyle object describing the style of the minimize button.

        [normal]
        The look of the button in the normal state - either an (R, G, B, A)
        tuple or a string representing a path to an image.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine UIButtonStyle object to a string.

    [UISelectableStyle]
    ----------------------------------------------------------------------------
    Style configuration for Permafrost Engine selectable labels.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [hover]
        The look of the selectable label in the hovered (inactive) state -
        either an (R, G, B, A) tuple or a string representing a path to an
        image.

        [hover_active]
        The look of the selectable label in the hovered (active) state - either
        an (R, G, B, A) tuple or a string representing a path to an image.

        [image_padding]
        An (X, Y) tuple of floats to control the padding around images.

        [normal]
        The look of the selectable label in the normal (inactive) state -
        either an (R, G, B, A) tuple or a string representing a path to an
        image.

        [normal_active]
        The look of the selectable label in the normal (active) state - either
        an (R, G, B, A) tuple or a string representing a path to an image.

        [padding]
        An (X, Y) tuple of floats to control the padding around selectable
        labels.

        [pressed]
        The look of the selectable label in the pressed (inactive) state -
        either an (R, G, B, A) tuple or a string representing a path to an
        image.

        [pressed_active]
        The look of the selectable label in the pressed (active) state - either
        an (R, G, B, A) tuple or a string representing a path to an image.

        [rounding]
        A floating-point value to control how rounded the selectable label
        corners are.

        [text_alignment]
        The mode of text alignment (pf.NK_TEXT_CENTERED, etc.).

        [text_hover]
        The color of the selectable label text in the hovered (inactive) state
        - an (R, G, B, A) tuple

        [text_hover_active]
        The color of the selectable label text in the hovered (active) state -
        an (R, G, B, A) tuple

        [text_normal]
        The color of the selectable label text in the normal (inactive) state -
        an (R, G, B, A) tuple.

        [text_normal_active]
        The color of the selectable label text in the normal (active) state -
        an (R, G, B, A) tuple.

        [text_pressed]
        The color of the selectable label text in the pressed (inactive) state
        - an (R, G, B, A) tuple

        [text_pressed_active]
        The color of the selectable label text in the pressed (active) state -
        an (R, G, B, A) tuple

        [touch_padding]
        An (X, Y) tuple of floats to control the clickable region of the
        selectable label.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine UISelectableStyle object to a string.

    [UIToggleStyle]
    ----------------------------------------------------------------------------
    Style configuration for Permafrost Engine UI toggle-able options.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [active]
        The look of the toggle button in the active state - either an (R, G, B,
        A) tuple or a string representing a path to an image.

        [border]
        A floating-point value of the toggle button border width, in pixels.

        [border_color]
        The color of the toggle button border - an (R, G, B, A) tuple.

        [cursor_hover]
        The look of the toggle button cursor (selection indicator) in the hover
        state - either an (R, G, B, A) tuple or a string representing a path to
        an image.

        [cursor_normal]
        The look of the toggle button cursor (selection indicator) in the
        normal state - either an (R, G, B, A) tuple or a string representing a
        path to an image.

        [hover]
        The look of the toggle button in the hovered state - either an (R, G,
        B, A) tuple or a string representing a path to an image.

        [normal]
        The look of the toggle button in the normal state - either an (R, G, B,
        A) tuple or a string representing a path to an image.

        [padding]
        An (X, Y) tuple of floats to control the padding around toggle buttons.

        [spacing]
        A float to control the spacing within a toggle button widget.

        [text_active]
        The color of the option text in the active state - an (R, G, B, A) tuple

        [text_alignment]
        A set of flags to control the text alignment of the option label.

        [text_background]
        The color of the option text background - an (R, G, B, A) tuple

        [text_hover]
        The color of the option text in the hovered state - an (R, G, B, A)
        tuple

        [text_normal]
        The color of the option text in the normal state - an (R, G, B, A)
        tuple.

        [touch_padding]
        An (X, Y) tuple of floats to control the clickable region of the toggle
        button.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine UIToggleStyle object to a string.

    [Window]
    ----------------------------------------------------------------------------
    Permafrost Engine UI window.

        ************************************************************************
        MEMBERS
        ************************************************************************
        [background]
        An (R, G, B, A) tuple of floats specifying the background color for
        some panels such as the combo box popup.

        [border]
        A float to control the border width of a window.

        [border_color]
        An (R,G,B,A) tuple to control the border color of a window.

        [closed]
        A readonly bool indicating if this window is 'closed'.

        [combo_border]
        A float to control the border width around a combo section.

        [combo_border_color]
        An (R,G,B,A) tuple to control the border color of window combo boxes.

        [combo_padding]
        An (X, Y) tuple of floats to control the padding around a combo section
        in a window.

        [contextual_border]
        A float to control the border width around a contextual button.

        [contextual_border_color]
        An (R,G,B,A) tuple to control the border color of window contextual
        panels.

        [contextual_padding]
        An (X, Y) tuple of floats to control the padding around a contextual
        button.

        [fixed_background]
        An image path or an (R, G, B, A) tuple of floats specifying the
        background style of the window.

        [group_border]
        A float to control the border width around a group.

        [group_border_color]
        An (R,G,B,A) tuple to control the border color of window group panels.

        [group_padding]
        An (X, Y) tuple of floats to control the padding around a group in a
        window.

        [header]
        An pf.UIHeaderStyle type for controlling the style parameters of the
        window header.

        [header_height]
        A float specifying the height of the window header in pixels.

        [hidden]
        A readonly bool indicating if this window is 'hidden'.

        [interactive]
        A read-write bool to enable or disable user interactivity for this
        window.

        [menu_border]
        A float to control the border width around a menu button.

        [menu_border_color]
        An (R,G,B,A) tuple to control the border color of window menus.

        [menu_padding]
        An (X, Y) tuple of floats to control the padding around a menu button
        in a window.

        [min_row_height_padding]
        A float to control the minimum number of pixels of padding at the
        header and footer of a row..

        [min_size]
        An (X, Y) tuple of floats to control the minimum size of the window.

        [padding]
        An (X, Y) tuple of floats to control the padding (between border and
        content) of a window.

        [popup_border]
        A float to control the border width around a popup window.

        [popup_border_color]
        An (R,G,B,A) tuple to control the border color of window popups.

        [popup_padding]
        An (X, Y) tuple of floats to control the padding in a popup window.

        [position]
        A tuple of two integers specifying the X and Y position of the window.

        [scrollbar_size]
        An (X, Y) tuple of floats to control the size of the scrollbar.

        [size]
        A tuple of two integers specifying the width and height dimentions of
        the window.

        [spacing]
        An (X, Y) tuple of floats to control the spacing (between components)
        within a window.

        [tooltip_border]
        A float to control the border width around a tooltip window.

        [tooltip_border_color]
        An (R,G,B,A) tuple to control the border color of tooltip panels.

        [tooltip_padding]
        An (X, Y) tuple of floats to control the padding in a tooltip window.

        ************************************************************************
        METHODS
        ************************************************************************
        [__pickle__]
        Serialize a Permafrost Engine window to a string.

        [button_label]
        Add a button with a label and action.

        [checkbox]
        Checkbox which can be toggled. Returns True if checked.

        [color_picker]
        Graphical color picker widget. Returns the selected color as an RGBA
        tuple.

        [combo_box]
        Present a combo box with a list of selectable options.

        [edit_string]
        Text field for getting string input from the user. Returns the current
        text.

        [file_browser]
        Present a file browser widget.

        [group]
        The window UI components pushed in the callable argument will be nested
        under a group.

        [hide]
        Make the window invisible.

        [image]
        Present an image at the specified path.

        [label_colored]
        Add a colored label layout with the specified alignment.

        [label_colored_wrap]
        Add a colored label layout.

        [layout_row_begin]
        Begin a new row to which widgets can be pushed.

        [layout_row_dynamic]
        Add a row with a dynamic layout.

        [layout_row_end]
        End a row previously started with 'layout_row_begin'.

        [layout_row_push]
        Add a widget to the currently active row. Note that this must be
        preceded by a call to 'layout_row_begin'.

        [layout_row_static]
        Add a row with a static layout.

        [on_hide]
        Callback that gets invoked when the user hides the window with the
        close button.

        [option_label]
        Radio button with the specified text. Returns if the radio button is
        selected.

        [popup]
        The window UI components pushed in the callable argument will be
        presented in a popup.

        [popup_close]
        Close the currently active popup window. Must only be called from poup
        context.

        [selectable_label]
        Adds a label that can be toggled to be selected with a mouse click.
        Returns the new state of the selectable label.

        [selectable_symbol_label]
        Text label preceded by one of the pf.NK_SYMBOL_ symbols.

        [show]
        Make the window visible.

        [simple_chart]
        Add a chart with a single slot.

        [spacer]
        Empty widget to consume slots in a row.

        [tree]
        The window UI components pushed in the callable argument will be nested
        under a collapsable tree section.

        [tree_element]
        The window UI components pushed in the callable argument will be nested
        under a collapsable non-root tree section.

        [update]
        Handles layout and state changes of the window. Default implementation
        is empty. This method should be overridden by subclasses to customize
        the window look and behavior.

********************************************************************************
BUILT-IN CONSTANTS
********************************************************************************

    ANCHOR_DEFAULT 9
    ANCHOR_X_CENTER 4
    ANCHOR_X_LEFT 1
    ANCHOR_X_MASK 7
    ANCHOR_X_RIGHT 2
    ANCHOR_Y_BOT 16
    ANCHOR_Y_CENTER 32
    ANCHOR_Y_MASK 56
    ANCHOR_Y_TOP 8
    ANIM_MODE_LOOP 0
    ANIM_MODE_ONCE 1
    ANIM_MODE_ONCE_HIDE_ON_FINISH 2
    BLEND_MODE_BLUR 1
    BLEND_MODE_NOBLEND 0
    CAM_MODE_FPS 0
    CAM_MODE_FREE 2
    CAM_MODE_RTS 1
    DIPLOMACY_STATE_PEACE 0
    DIPLOMACY_STATE_WAR 1
    EVENT_10HZ_TICK 65549
    EVENT_1HZ_TICK 65550
    EVENT_30HZ_TICK 65546
    EVENT_60HZ_TICK 65545
    EVENT_ANIM_CYCLE_FINISHED 65552
    EVENT_ANIM_FINISHED 65551
    EVENT_ATTACK_END 65558
    EVENT_ATTACK_START 65556
    EVENT_BUILDING_COMPLETED 65569
    EVENT_BUILD_BEGIN 65565
    EVENT_BUILD_END 65566
    EVENT_BUILD_FAIL_FOUND 65567
    EVENT_BUILD_TARGET_ACQUIRED 65568
    EVENT_ENGINE_LAST 131071
    EVENT_ENTITY_DEATH 65557
    EVENT_ENTITY_DIED 65570
    EVENT_ENTITY_STOP 65571
    EVENT_GAME_SIMSTATE_CHANGED 65559
    EVENT_MOTION_END 65555
    EVENT_MOTION_START 65554
    EVENT_MOVE_ISSUED 65553
    EVENT_NEW_GAME 65543
    EVENT_RENDER_3D_POST 65540
    EVENT_RENDER_3D_PRE 65539
    EVENT_RENDER_UI 65541
    EVENT_SCRIPT_TASK_EXCEPTION 65563
    EVENT_SCRIPT_TASK_FINISHED 65564
    EVENT_SELECTED_TILE_CHANGED 65542
    EVENT_SESSION_FAIL_LOAD 65562
    EVENT_SESSION_LOADED 65560
    EVENT_SESSION_POPPED 65561
    EVENT_UNIT_SELECTION_CHANGED 65544
    EVENT_UPDATE_END 65537
    EVENT_UPDATE_START 65536
    EVENT_UPDATE_UI 65538
    G_PAUSED_FULL 2
    G_PAUSED_UI_RUNNING 4
    G_RUNNING 1
    NK_BUTTON_DEFAULT 0
    NK_BUTTON_REPEATER 1
    NK_CHART_CLICKED 2
    NK_CHART_COLUMN 1
    NK_CHART_HOVERING 1
    NK_CHART_LINES 0
    NK_CHART_MAX 2
    NK_DYNAMIC 0
    NK_EDIT_ALLOW_TAB 8
    NK_EDIT_ALWAYS_INSERT_MODE 512
    NK_EDIT_AUTO_SELECT 2
    NK_EDIT_BOX 1640
    NK_EDIT_CLIPBOARD 64
    NK_EDIT_CTRL_ENTER_NEWLINE 128
    NK_EDIT_DEFAULT 0
    NK_EDIT_EDITOR 1128
    NK_EDIT_FIELD 608
    NK_EDIT_GOTO_END_ON_ACTIVATE 2048
    NK_EDIT_MULTILINE 1024
    NK_EDIT_NO_CURSOR 16
    NK_EDIT_NO_HORIZONTAL_SCROLL 256
    NK_EDIT_READ_ONLY 1
    NK_EDIT_SELECTABLE 32
    NK_EDIT_SIG_ENTER 4
    NK_EDIT_SIMPLE 512
    NK_FIXED 0
    NK_HIDDEN 0
    NK_HORIZONTAL 1
    NK_MAXIMIZED 1
    NK_MINIMIZED 0
    NK_MODIFIABLE 1
    NK_POPUP_DYNAMIC 1
    NK_POPUP_STATIC 0
    NK_RGB 0
    NK_RGBA 1
    NK_SHOWN 1
    NK_STATIC 1
    NK_SYMBOL_CIRCLE_OUTLINE 4
    NK_SYMBOL_CIRCLE_SOLID 3
    NK_SYMBOL_MAX 13
    NK_SYMBOL_MINUS 12
    NK_SYMBOL_NONE 0
    NK_SYMBOL_PLUS 11
    NK_SYMBOL_RECT_OUTLINE 6
    NK_SYMBOL_RECT_SOLID 5
    NK_SYMBOL_TRIANGLE_DOWN 8
    NK_SYMBOL_TRIANGLE_LEFT 9
    NK_SYMBOL_TRIANGLE_RIGHT 10
    NK_SYMBOL_TRIANGLE_UP 7
    NK_SYMBOL_UNDERSCORE 2
    NK_SYMBOL_X 1
    NK_TEXT_ALIGN_BOTTOM 32
    NK_TEXT_ALIGN_CENTERED 2
    NK_TEXT_ALIGN_LEFT 1
    NK_TEXT_ALIGN_MIDDLE 16
    NK_TEXT_ALIGN_RIGHT 4
    NK_TEXT_ALIGN_TOP 8
    NK_TEXT_CENTERED 18
    NK_TEXT_LEFT 17
    NK_TEXT_RIGHT 20
    NK_TREE_NODE 0
    NK_TREE_TAB 1
    NK_VERTICAL 0
    NK_WINDOW_BACKGROUND 256
    NK_WINDOW_BORDER 1
    NK_WINDOW_CLOSABLE 8
    NK_WINDOW_MINIMIZABLE 16
    NK_WINDOW_MOVABLE 2
    NK_WINDOW_NO_INPUT 1024
    NK_WINDOW_NO_SCROLLBAR 32
    NK_WINDOW_SCALABLE 4
    NK_WINDOW_SCALE_LEFT 512
    NK_WINDOW_SCROLL_AUTO_HIDE 128
    NK_WINDOW_TITLE 64
    PF_WF_BORDERLESS_WIN 272
    PF_WF_FULLSCREEN 257
    PF_WF_WINDOW 256
    SDL_APP_DIDENTERBACKGROUND 260
    SDL_APP_DIDENTERFOREGROUND 262
    SDL_APP_LOWMEMORY 258
    SDL_APP_TERMINATING 257
    SDL_APP_WILLENTERBACKGROUND 259
    SDL_APP_WILLENTERFOREGROUND 261
    SDL_AUDIODEVICEADDED 4352
    SDL_AUDIODEVICEREMOVED 4353
    SDL_BUTTON_LEFT 1
    SDL_BUTTON_MIDDLE 2
    SDL_BUTTON_RIGHT 3
    SDL_BUTTON_X1 4
    SDL_BUTTON_X2 5
    SDL_CLIPBOARDUPDATE 2304
    SDL_CONTROLLERAXISMOTION 1616
    SDL_CONTROLLERBUTTONDOWN 1617
    SDL_CONTROLLERBUTTONUP 1618
    SDL_CONTROLLERDEVICEADDED 1619
    SDL_CONTROLLERDEVICEREMAPPED 1621
    SDL_CONTROLLERDEVICEREMOVED 1620
    SDL_DOLLARGESTURE 2048
    SDL_DOLLARRECORD 2049
    SDL_DROPBEGIN 4098
    SDL_DROPCOMPLETE 4099
    SDL_DROPFILE 4096
    SDL_DROPTEXT 4097
    SDL_FINGERDOWN 1792
    SDL_FINGERMOTION 1794
    SDL_FINGERUP 1793
    SDL_JOYAXISMOTION 1536
    SDL_JOYBALLMOTION 1537
    SDL_JOYBUTTONDOWN 1539
    SDL_JOYBUTTONUP 1540
    SDL_JOYDEVICEADDED 1541
    SDL_JOYDEVICEREMOVED 1542
    SDL_JOYHATMOTION 1538
    SDL_KEYDOWN 768
    SDL_KEYMAPCHANGED 772
    SDL_KEYUP 769
    SDL_LASTEVENT 65535
    SDL_MOUSEBUTTONDOWN 1025
    SDL_MOUSEBUTTONUP 1026
    SDL_MOUSEMOTION 1024
    SDL_MOUSEWHEEL 1027
    SDL_MULTIGESTURE 2050
    SDL_PRESSED 1
    SDL_QUIT 256
    SDL_RELEASED 0
    SDL_RENDER_DEVICE_RESET 8193
    SDL_RENDER_TARGETS_RESET 8192
    SDL_SCANCODE_0 39
    SDL_SCANCODE_1 30
    SDL_SCANCODE_2 31
    SDL_SCANCODE_3 32
    SDL_SCANCODE_4 33
    SDL_SCANCODE_5 34
    SDL_SCANCODE_6 35
    SDL_SCANCODE_7 36
    SDL_SCANCODE_8 37
    SDL_SCANCODE_9 38
    SDL_SCANCODE_A 4
    SDL_SCANCODE_AC_BACK 270
    SDL_SCANCODE_AC_BOOKMARKS 274
    SDL_SCANCODE_AC_FORWARD 271
    SDL_SCANCODE_AC_HOME 269
    SDL_SCANCODE_AC_REFRESH 273
    SDL_SCANCODE_AC_SEARCH 268
    SDL_SCANCODE_AC_STOP 272
    SDL_SCANCODE_AGAIN 121
    SDL_SCANCODE_ALTERASE 153
    SDL_SCANCODE_APOSTROPHE 52
    SDL_SCANCODE_APP1 283
    SDL_SCANCODE_APP2 284
    SDL_SCANCODE_APPLICATION 101
    SDL_SCANCODE_AUDIOMUTE 262
    SDL_SCANCODE_AUDIONEXT 258
    SDL_SCANCODE_AUDIOPLAY 261
    SDL_SCANCODE_AUDIOPREV 259
    SDL_SCANCODE_AUDIOSTOP 260
    SDL_SCANCODE_B 5
    SDL_SCANCODE_BACKSLASH 49
    SDL_SCANCODE_BACKSPACE 42
    SDL_SCANCODE_BRIGHTNESSDOWN 275
    SDL_SCANCODE_BRIGHTNESSUP 276
    SDL_SCANCODE_C 6
    SDL_SCANCODE_CALCULATOR 266
    SDL_SCANCODE_CANCEL 155
    SDL_SCANCODE_CAPSLOCK 57
    SDL_SCANCODE_CLEAR 156
    SDL_SCANCODE_CLEARAGAIN 162
    SDL_SCANCODE_COMMA 54
    SDL_SCANCODE_COMPUTER 267
    SDL_SCANCODE_COPY 124
    SDL_SCANCODE_CRSEL 163
    SDL_SCANCODE_CURRENCYSUBUNIT 181
    SDL_SCANCODE_CURRENCYUNIT 180
    SDL_SCANCODE_CUT 123
    SDL_SCANCODE_D 7
    SDL_SCANCODE_DECIMALSEPARATOR 179
    SDL_SCANCODE_DELETE 76
    SDL_SCANCODE_DISPLAYSWITCH 277
    SDL_SCANCODE_DOWN 81
    SDL_SCANCODE_E 8
    SDL_SCANCODE_EJECT 281
    SDL_SCANCODE_END 77
    SDL_SCANCODE_EQUALS 46
    SDL_SCANCODE_ESCAPE 41
    SDL_SCANCODE_EXECUTE 116
    SDL_SCANCODE_EXSEL 164
    SDL_SCANCODE_F 9
    SDL_SCANCODE_F1 58
    SDL_SCANCODE_F10 67
    SDL_SCANCODE_F11 68
    SDL_SCANCODE_F12 69
    SDL_SCANCODE_F13 104
    SDL_SCANCODE_F14 105
    SDL_SCANCODE_F15 106
    SDL_SCANCODE_F16 107
    SDL_SCANCODE_F17 108
    SDL_SCANCODE_F18 109
    SDL_SCANCODE_F19 110
    SDL_SCANCODE_F2 59
    SDL_SCANCODE_F20 111
    SDL_SCANCODE_F21 112
    SDL_SCANCODE_F22 113
    SDL_SCANCODE_F23 114
    SDL_SCANCODE_F24 115
    SDL_SCANCODE_F3 60
    SDL_SCANCODE_F4 61
    SDL_SCANCODE_F5 62
    SDL_SCANCODE_F6 63
    SDL_SCANCODE_F7 64
    SDL_SCANCODE_F8 65
    SDL_SCANCODE_F9 66
    SDL_SCANCODE_FIND 126
    SDL_SCANCODE_G 10
    SDL_SCANCODE_GRAVE 53
    SDL_SCANCODE_H 11
    SDL_SCANCODE_HELP 117
    SDL_SCANCODE_HOME 74
    SDL_SCANCODE_I 12
    SDL_SCANCODE_INSERT 73
    SDL_SCANCODE_INTERNATIONAL2 136
    SDL_SCANCODE_INTERNATIONAL3 137
    SDL_SCANCODE_INTERNATIONAL4 138
    SDL_SCANCODE_INTERNATIONAL5 139
    SDL_SCANCODE_INTERNATIONAL6 140
    SDL_SCANCODE_INTERNATIONAL7 141
    SDL_SCANCODE_INTERNATIONAL8 142
    SDL_SCANCODE_INTERNATIONAL9 143
    SDL_SCANCODE_J 13
    SDL_SCANCODE_K 14
    SDL_SCANCODE_KBDILLUMDOWN 279
    SDL_SCANCODE_KBDILLUMTOGGLE 278
    SDL_SCANCODE_KBDILLUMUP 280
    SDL_SCANCODE_KP_0 98
    SDL_SCANCODE_KP_00 176
    SDL_SCANCODE_KP_000 177
    SDL_SCANCODE_KP_1 89
    SDL_SCANCODE_KP_2 90
    SDL_SCANCODE_KP_3 91
    SDL_SCANCODE_KP_4 92
    SDL_SCANCODE_KP_5 93
    SDL_SCANCODE_KP_6 94
    SDL_SCANCODE_KP_7 95
    SDL_SCANCODE_KP_8 96
    SDL_SCANCODE_KP_9 97
    SDL_SCANCODE_KP_A 188
    SDL_SCANCODE_KP_AMPERSAND 199
    SDL_SCANCODE_KP_AT 206
    SDL_SCANCODE_KP_B 189
    SDL_SCANCODE_KP_BACKSPACE 187
    SDL_SCANCODE_KP_BINARY 218
    SDL_SCANCODE_KP_C 190
    SDL_SCANCODE_KP_CLEAR 216
    SDL_SCANCODE_KP_CLEARENTRY 217
    SDL_SCANCODE_KP_COLON 203
    SDL_SCANCODE_KP_D 191
    SDL_SCANCODE_KP_DBLAMPERSAND 200
    SDL_SCANCODE_KP_DBLVERTICALBAR 202
    SDL_SCANCODE_KP_DECIMAL 220
    SDL_SCANCODE_KP_DIVIDE 84
    SDL_SCANCODE_KP_E 192
    SDL_SCANCODE_KP_ENTER 88
    SDL_SCANCODE_KP_EQUALS 103
    SDL_SCANCODE_KP_EXCLAM 207
    SDL_SCANCODE_KP_F 193
    SDL_SCANCODE_KP_GREATER 198
    SDL_SCANCODE_KP_HASH 204
    SDL_SCANCODE_KP_HEXADECIMAL 221
    SDL_SCANCODE_KP_LEFTBRACE 184
    SDL_SCANCODE_KP_LEFTPAREN 182
    SDL_SCANCODE_KP_LESS 197
    SDL_SCANCODE_KP_MEMADD 211
    SDL_SCANCODE_KP_MEMCLEAR 210
    SDL_SCANCODE_KP_MEMDIVIDE 214
    SDL_SCANCODE_KP_MEMMULTIPLY 213
    SDL_SCANCODE_KP_MEMRECALL 209
    SDL_SCANCODE_KP_MEMSTORE 208
    SDL_SCANCODE_KP_MEMSUBTRACT 212
    SDL_SCANCODE_KP_MINUS 86
    SDL_SCANCODE_KP_MULTIPLY 85
    SDL_SCANCODE_KP_OCTAL 219
    SDL_SCANCODE_KP_PERCENT 196
    SDL_SCANCODE_KP_PERIOD 99
    SDL_SCANCODE_KP_PLUS 87
    SDL_SCANCODE_KP_PLUSMINUS 215
    SDL_SCANCODE_KP_POWER 195
    SDL_SCANCODE_KP_RIGHTBRACE 185
    SDL_SCANCODE_KP_RIGHTPAREN 183
    SDL_SCANCODE_KP_SPACE 205
    SDL_SCANCODE_KP_TAB 186
    SDL_SCANCODE_KP_VERTICALBAR 201
    SDL_SCANCODE_KP_XOR 194
    SDL_SCANCODE_L 15
    SDL_SCANCODE_LALT 226
    SDL_SCANCODE_LANG1 144
    SDL_SCANCODE_LANG2 145
    SDL_SCANCODE_LANG3 146
    SDL_SCANCODE_LANG4 147
    SDL_SCANCODE_LANG5 148
    SDL_SCANCODE_LANG6 149
    SDL_SCANCODE_LANG7 150
    SDL_SCANCODE_LANG8 151
    SDL_SCANCODE_LANG9 152
    SDL_SCANCODE_LCTRL 224
    SDL_SCANCODE_LEFT 80
    SDL_SCANCODE_LEFTBRACKET 47
    SDL_SCANCODE_LGUI 227
    SDL_SCANCODE_LSHIFT 225
    SDL_SCANCODE_M 16
    SDL_SCANCODE_MAIL 265
    SDL_SCANCODE_MEDIASELECT 263
    SDL_SCANCODE_MENU 118
    SDL_SCANCODE_MINUS 45
    SDL_SCANCODE_MODE 257
    SDL_SCANCODE_MUTE 127
    SDL_SCANCODE_N 17
    SDL_SCANCODE_NONUSBACKSLASH 100
    SDL_SCANCODE_NONUSHASH 50
    SDL_SCANCODE_NUMLOCKCLEAR 83
    SDL_SCANCODE_O 18
    SDL_SCANCODE_OPER 161
    SDL_SCANCODE_OUT 160
    SDL_SCANCODE_P 19
    SDL_SCANCODE_PAGEDOWN 78
    SDL_SCANCODE_PAGEUP 75
    SDL_SCANCODE_PASTE 125
    SDL_SCANCODE_PAUSE 72
    SDL_SCANCODE_PERIOD 55
    SDL_SCANCODE_POWER 102
    SDL_SCANCODE_PRINTSCREEN 70
    SDL_SCANCODE_PRIOR 157
    SDL_SCANCODE_Q 20
    SDL_SCANCODE_R 21
    SDL_SCANCODE_RALT 230
    SDL_SCANCODE_RCTRL 228
    SDL_SCANCODE_RETURN 40
    SDL_SCANCODE_RETURN2 158
    SDL_SCANCODE_RGUI 231
    SDL_SCANCODE_RIGHT 79
    SDL_SCANCODE_RIGHTBRACKET 48
    SDL_SCANCODE_RSHIFT 229
    SDL_SCANCODE_S 22
    SDL_SCANCODE_SCROLLLOCK 71
    SDL_SCANCODE_SELECT 119
    SDL_SCANCODE_SEMICOLON 51
    SDL_SCANCODE_SEPARATOR 159
    SDL_SCANCODE_SLASH 56
    SDL_SCANCODE_SLEEP 282
    SDL_SCANCODE_SPACE 44
    SDL_SCANCODE_STOP 120
    SDL_SCANCODE_SYSREQ 154
    SDL_SCANCODE_T 23
    SDL_SCANCODE_TAB 43
    SDL_SCANCODE_THOUSANDSSEPARATOR 178
    SDL_SCANCODE_U 24
    SDL_SCANCODE_UNDO 122
    SDL_SCANCODE_UP 82
    SDL_SCANCODE_V 25
    SDL_SCANCODE_VOLUMEDOWN 129
    SDL_SCANCODE_VOLUMEUP 128
    SDL_SCANCODE_W 26
    SDL_SCANCODE_WWW 264
    SDL_SCANCODE_X 27
    SDL_SCANCODE_Y 28
    SDL_SCANCODE_Z 29
    SDL_SYSWMEVENT 513
    SDL_TEXTEDITING 770
    SDL_TEXTINPUT 771
    SDL_USEREVENT 32768
    SDL_WINDOWEVENT 512
    TILES_PER_CHUNK_HEIGHT 32
    TILES_PER_CHUNK_WIDTH 32
    TILETYPE_CORNER_CONCAVE_NE 11
    TILETYPE_CORNER_CONCAVE_NW 9
    TILETYPE_CORNER_CONCAVE_SE 7
    TILETYPE_CORNER_CONCAVE_SW 5
    TILETYPE_CORNER_CONVEX_NE 12
    TILETYPE_CORNER_CONVEX_NW 10
    TILETYPE_CORNER_CONVEX_SE 8
    TILETYPE_CORNER_CONVEX_SW 6
    TILETYPE_FLAT 0
    TILETYPE_RAMP_EW 3
    TILETYPE_RAMP_NS 2
    TILETYPE_RAMP_SN 1
    TILETYPE_RAMP_WE 4
    X_COORDS_PER_TILE 8
    Y_COORDS_PER_TILE 4
    Z_COORDS_PER_TILE 8
    trace_pickling False
